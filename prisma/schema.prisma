// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(uuid())
  fullname   String
  email      String       @unique
  password   String
  categories Categories[]
  Accounts   Accounts[]
  Entries    Entries[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @default(now()) @updatedAt
}

model Categories {
  id            String          @id @default(uuid())
  title         String
  user          User            @relation(fields: [userId], references: [id])
  userId        String
  subcategories SubCategories[]
  type          TypeEntries     @relation(fields: [typeId], references: [id])
  typeId        String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now()) @updatedAt
}

model SubCategories {
  id           String     @id @default(uuid())
  title        String
  categories   Categories @relation(fields: [categoriesId], references: [id])
  categoriesId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now()) @updatedAt
}

model Accounts {
  id             String       @id @default(uuid())
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  initialBalance Decimal      @default(0.00)
  bankAccount    String
  typeAccount    TypeAccounts @relation(fields: [typeAccountsId], references: [id])
  typeAccountsId String
  Entries        Entries[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
}

model TypeAccounts {
  id        String     @id @default(uuid())
  title     String
  Accounts  Accounts[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
}

model Entries {
  id         String      @id @default(uuid())
  title      String
  amount     Decimal
  type       TypeEntries @relation(fields: [typeId], references: [id])
  typeId     String
  realize    Boolean     @default(false)
  dueDate    DateTime
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now()) @updatedAt
  User       User        @relation(fields: [userId], references: [id])
  userId     String
  accounts   Accounts    @relation(fields: [accountsId], references: [id])
  accountsId String
}

model TypeEntries {
  id         String       @id @default(uuid())
  title      String
  Entries    Entries[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @default(now()) @updatedAt
  Categories Categories[]
}
